apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cassandra-jmx-exporter.fullname" . }}
  labels:
    {{- include "cassandra-jmx-exporter.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cassandra-jmx-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cassandra-jmx-exporter.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "cassandra-jmx-exporter.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "cassandra-jmx-exporter.name" . }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: metrics
              containerPort: {{ .Values.service.ports.metrics }}
              protocol: TCP
            - name: health
              containerPort: {{ .Values.service.ports.health }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- toYaml (omit .Values.livenessProbe "enabled") | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- toYaml (omit .Values.readinessProbe "enabled") | nindent 12 }}
          {{- end }}
          env:
            - name: CONFIG_PATH
              value: {{ printf "%s/%s" .Values.config.mountPath .Values.config.fileName | quote }}
          {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- $hasConfig := or .Values.config.create .Values.config.existingConfigMap -}}
          {{- $hasExtraMounts := gt (len .Values.extraVolumeMounts) 0 -}}
          {{- if or $hasConfig $hasExtraMounts }}
          volumeMounts:
            {{- if $hasConfig }}
            - name: config
              mountPath: {{ .Values.config.mountPath }}
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- $hasConfigVolume := or .Values.config.create .Values.config.existingConfigMap -}}
      {{- $hasExtraVolumes := gt (len .Values.extraVolumes) 0 -}}
      {{- if or $hasConfigVolume $hasExtraVolumes }}
      volumes:
        {{- if $hasConfigVolume }}
        - name: config
          configMap:
            name: {{ if .Values.config.existingConfigMap }}{{ .Values.config.existingConfigMap }}{{ else }}{{ include "cassandra-jmx-exporter.fullname" . }}{{ end }}
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
